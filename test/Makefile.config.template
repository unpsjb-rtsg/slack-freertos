########
# Configuration.
#
GCC_BIN ?= #/path/to/bin

# Test to perform.
# 1. Execution cost measured in CPU cycles of the vTaskDelayUntil() kernel function.
# 2. Amount of ceil and floor operations performed by the selected Slack Stealing method.
# 3. Execution cost of the selected Slack Stealing method measured in CPU cycles.
# 4. Amount of for and while loops performed by the selected Slack Stealing method.
/* [[[cog
cog.outl("KERNEL_TEST ?= {0}".format(KERNEL_TEST))
]]]*/
// [[[end]]]

# Number of tasks.
/* [[[cog
cog.outl("TASK_COUNT_PARAM ?= {0}".format(TASK_COUNT_PARAM))
]]]*/
// [[[end]]]

# Number of task releases to evaluate.
/* [[[cog
cog.outl("RELEASE_COUNT_PARAM ?= {0}".format(RELEASE_COUNT_PARAM))
]]]*/
// [[[end]]]

# Use slack
/* [[[cog
cog.outl("SLACK ?= {0}".format(SLACK))
]]]*/
// [[[end]]]

# If 1, only calculate slack at the scheduler start.
/* [[[cog
cog.outl("SLACK_K ?= {0}".format(SLACK_K))
]]]*/
// [[[end]]]

# Slack method to evaluate:
# 0 = Fixed
# 1 = Davis
/* [[[cog
cog.outl("SLACK_METHOD ?= {0}".format(SLACK_METHOD))
]]]*/
// [[[end]]]

# priority levels that are used for slack.
/* [[[cog
cog.outl("MAX_PRIO ?= {0}".format(MAX_PRIO))
]]]*/
// [[[end]]]

/* [[[cog
cog.outl("TEST_PATH ?= {0}".format(TEST_PATH))
]]]*/
// [[[end]]]

/* [[[cog
cog.outl("FREERTOS_KERNEL_VERSION_NUMBER ?= {0}".format(FREERTOS_KERNEL_VERSION_NUMBER))
]]]*/
// [[[end]]]

/* [[[cog
cog.outl("FREERTOS_KERNEL_VERSION_NUMBER_MAJOR ?= {0}".format(FREERTOS_KERNEL_VERSION_NUMBER_MAJOR))
]]]*/
// [[[end]]]

/* [[[cog
cog.outl("DEBUG ?= {0}".format(DEBUG))
]]]*/
// [[[end]]]

#
# End configuration.
########
