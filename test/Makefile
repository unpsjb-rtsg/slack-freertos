# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN ?= #/path/to/bin

# mbed library and freertos version provided by default
MBED_DIR=../../../libs/mbed
FREERTOS_DIR=../../../libs/FreeRTOS
SLACK_DIR=../../../slack/$(FREERTOS_KERNEL_VERSION_NUMBER)

FREERTOS_KERNEL_VERSION_NUMBER=v8.1.2

export FREERTOS_KERNEL_VERSION_NUMBER

SYS_OBJECTS = $(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/retarget.o $(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/system_LPC17xx.o $(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/board.o $(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/cmsis_nvic.o $(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/startup_LPC17xx.o 

MBED_INCLUDE_PATHS = -I$(MBED_DIR) -I$(MBED_DIR)/TARGET_LPC1768 -I.$(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM -I$(MBED_DIR)/TARGET_LPC1768/TARGET_NXP -I$(MBED_DIR)/TARGET_LPC1768/TARGET_NXP/TARGET_LPC176X -I$(MBED_DIR)/TARGET_LPC1768/TARGET_NXP/TARGET_LPC176X/TARGET_MBED_LPC1768
FREERTOS_INCLUDE_PATHS =  -I$(FREERTOS_DIR)/include -I$(FREERTOS_DIR)/portable -I./
INCLUDE_PATHS = -I. $(FREERTOS_INCLUDE_PATHS) $(MBED_INCLUDE_PATHS) -I$(SLACK_DIR)

LIBRARY_PATHS = -L$(MBED_DIR)/TARGET_LPC1768/TOOLCHAIN_GCC_ARM -L$(FREERTOS_DIR)
LIBRARIES = -lmbed -lfreertos
LINKER_SCRIPT = ../../LPC1768.ld

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
############################################################################### 

CPU = -mcpu=cortex-m3 -mthumb
CC_FLAGS = $(CPU) -c -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -Wall 
CC_FLAGS += -MMD -MP
CPP_FLAGS = $(CC_FLAGS) -fno-rtti

CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTARGET_MBED_LPC1768 -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 -DMBED_BUILD_TIMESTAMP=1414254042.69 -D__MBED__=1 -DBATCH_TEST=$(BATCH_TEST) -DMAX_PRIO=$(MAX_PRIO) -D__NEWLIB__ -D__CODE_RED -DTASK_CNT=$(TASK_CNT) -DRELEASE_CNT=$(RELEASE_CNT) -DSLACK=$(SLACK) -DSLACK_K=$(SLACK_K) -DSLACK_METHOD=$(SLACK_METHOD)
CPP_SYMBOLS = $(CC_SYMBOLS) -DCPP_USE_HEAP 

LD_FLAGS = -mcpu=cortex-m3 -mthumb -Wl,--gc-sections -u _printf_float -u _scanf_float
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

############################################################################### 

ifeq ($(DEBUG), 1)
  CC_FLAGS += -Og -g3
  CC_SYMBOLS += -DDEBUG
else
  CC_FLAGS += -O3
  CC_SYMBOLS += -DNDEBUG
endif

############################################################################### 

OBJDIR=bin

SRCS = $(wildcard *.cpp)
OBJS = $(SRCS:.cpp=.o)
ELFS = $(OBJS:.o=.elf)
BINS = $(OBJS:.o=.bin)

all: freertos $(BINS)

clean:
	@$(MAKE) -C $(FREERTOS_DIR) -f Makefile.mk clean TARGET=$(TARGET) USE_SLACK=1
	@$(RM) -f $(OBJS) $(ELFS) $(BINS) $(DEPS)
	@echo "Cleaning binary files..."
	
freertos:
	@$(MAKE) -C $(FREERTOS_DIR) -f Makefile.mk APP_DIR=../../test/$(TEST_PATH) USE_SLACK=1 GCC_BIN_PATH=$(GCC_BIN) TEST=1 TASK_CNT=$(TASK_CNT) RELEASE_CNT=$(RELEASE_CNT) SLACK=$(SLACK) SLACK_K=$(SLACK_K) SLACK_METHOD=$(SLACK_METHOD)

.cpp.o:
	@$(CPP) $(CPP_FLAGS) $(CPP_SYMBOLS) -std=gnu++98 $(INCLUDE_PATHS) -o $@ $<
	@echo "CPP $<"

%.elf: %.o $(SYS_OBJECTS)
	@$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS)
	@echo "LD $@"
    
%.bin: %.elf
	@$(OBJCOPY) -S -O binary $< $@
	@echo "OBJCOPY $@"

DEPS = $(OBJS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)