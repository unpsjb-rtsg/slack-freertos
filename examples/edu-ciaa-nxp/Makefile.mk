# This file is based on the Makefile automagically generated by mbed.org. 
# For more information, see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

BUILD_DIR = ../../build

EXAMPLE = $(APP_NAME)

SRC += $(wildcard $(APP_NAME)/*.c)
SRC += $(wildcard utils/*.c)
SRC += $(wildcard common/*.c)

OBJECTS = $(SRC:.c=.o)

LPC_INCLUDE_PATH += -I../../board/edu-ciaa-nxp/lpc/lpc_chip_43xx/inc
LPC_INCLUDE_PATH += -I../../board/edu-ciaa-nxp/lpc/lpc_board_ciaa_edu_4337/inc
LPC_INCLUDE_PATH += -I../../board/edu-ciaa-nxp/lpc/lpc_chip_43xx/inc/usbd/ 

FREERTOS_INCLUDE_PATH += -I../../libs/FreeRTOS/$(FREERTOS_KERNEL_VERSION_NUMBER)/include
FREERTOS_INCLUDE_PATH += -I../../libs/FreeRTOS/$(FREERTOS_KERNEL_VERSION_NUMBER)/portable/GCC/ARM_CM4F

SAPI_INCLUDE_PATH += -I../../libs/sapi_bm/inc

INCLUDE_PATHS += -I./$(EXAMPLE)
INCLUDE_PATHS += -I./utils
INCLUDE_PATHS += -I./common
INCLUDE_PATHS += -I../../slack/$(FREERTOS_KERNEL_VERSION_NUMBER)
INCLUDE_PATHS += $(LPC_INCLUDE_PATH)
INCLUDE_PATHS += $(SAPI_INCLUDE_PATH)
INCLUDE_PATHS += $(FREERTOS_INCLUDE_PATH)

SAPI_LIBRARY_PATH = ../../libs/sapi_bm
FREERTOS_LIBRARY_PATH = ../../libs/FreeRTOS
LPC_LIBRARY_PATH = ../../board/edu-ciaa-nxp/lpc/
LIBRARY_PATHS += -L$(FREERTOS_LIBRARY_PATH)
LIBRARY_PATHS += -L$(LPC_LIBRARY_PATH)
LIBRARY_PATHS += -L$(SAPI_LIBRARY_PATH)
LIBRARIES += -lfreertos
LIBRARIES += -llpc
LIBRARIES += -lsapi

LINKER_SCRIPT = ../../board/edu-ciaa-nxp/ldscript/ciaa_lpc4337.ld

ifeq ($(APP_NAME), example3)
  TZ = 1
  ifeq ($(TRACEALIZER_VERSION_NUMBER), v3.0.2)
    INCLUDE_PATHS += -I../../libs/Tracealizer/$(TRACEALIZER_VERSION_NUMBER)/Include
    INCLUDE_PATHS += -I../../libs/Tracealizer/$(TRACEALIZER_VERSION_NUMBER)/ConfigurationTemplate
    CFLAGS += -DTRACEALYZER_v3_0_2
  endif
  ifeq ($(TRACEALIZER_VERSION_NUMBER), v3.1.3)
    INCLUDE_PATHS += -I../../libs/Tracealizer/$(TRACEALIZER_VERSION_NUMBER)/include
    INCLUDE_PATHS += -I../../libs/Tracealizer/$(TRACEALIZER_VERSION_NUMBER)/config
    CFLAGS += -DTRACEALYZER_v3_1_3
  endif
else
  TZ = 0
endif

DEFINES += CORE_M4
DEFINES += __USE_LPCOPEN
DEFINES += TARGET_EDU_CIAA_NXP
_DEFINES=$(foreach m, $(DEFINES), -D$(m))

ARCH_FLAGS += -mcpu=cortex-m4 
ARCH_FLAGS += -mthumb
ARCH_FLAGS += -mfloat-abi=hard
ARCH_FLAGS += -mfpu=fpv4-sp-d16

CFLAGS += $(ARCH_FLAGS) 
CFLAGS += $(INCLUDES) 
CFLAGS += $(_DEFINES) 
CFLAGS += -ggdb3 
CFLAGS += -Og
CFLAGS += -MMD
CFLAGS += -MP
CFLAGS += -c
CFLAGS += -std=gnu99 

LDFLAGS += $(ARCH_FLAGS)
LDFLAGS += -nostartfiles
LDFLAGS += -Wl,-gc-sections
LDFLAGS += $(foreach l, $(LIBS), -l$(l))

MAKE_FLAGS += --no-print-directory

ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -g
else
  CC_FLAGS += -DNDEBUG -Os
endif

export TARGET APP_NAME LPC_INCLUDE_PATH CFLAGS

all: $(BUILD_DIR)/$(EXAMPLE).bin size

clean:
	+@echo "Cleaning $(TARGET) files..."
	@$(MAKE) $(MAKE_FLAGS) -C $(LPC_LIBRARY_PATH) -f Makefile.mk clean
	@$(MAKE) $(MAKE_FLAGS) -C $(SAPI_LIBRARY_PATH) -f Makefile.mk clean
	@$(MAKE) $(MAKE_FLAGS) -C $(FREERTOS_LIBRARY_PATH) -f Makefile.mk clean APP_DIR=$(EXAMPLE) USE_SLACK=1 TZ=$(TZ)
	@rm -f $(BUILD_DIR)/$(EXAMPLE).bin $(BUILD_DIR)/$(EXAMPLE).elf $(OBJECTS) $(DEPS)

.c.o:
	+@echo "Compile: $<"
	@$(CC) $(CFLAGS) $(INCLUDE_PATHS) -o $@ $<	

$(BUILD_DIR)/$(EXAMPLE).elf: $(OBJECTS)
	@$(MAKE) $(MAKE_FLAGS) -C $(LPC_LIBRARY_PATH) -f Makefile.mk
	@$(MAKE) $(MAKE_FLAGS) -C $(SAPI_LIBRARY_PATH) -f Makefile.mk
	@$(MAKE) $(MAKE_FLAGS) -C $(FREERTOS_LIBRARY_PATH) -f Makefile.mk APP_DIR=$(EXAMPLE) USE_SLACK=1 TZ=$(TZ)
	+@echo "Linking: $@"
	@$(LD) $(LDFLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES)

$(BUILD_DIR)/$(EXAMPLE).bin: $(BUILD_DIR)/$(EXAMPLE).elf
	+@echo "Binary: $@"
	@$(OBJCOPY) -O binary $< $@
	
size: $(BUILD_DIR)/$(EXAMPLE).elf
	$(SIZE) $<

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
